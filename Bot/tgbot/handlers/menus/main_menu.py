from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext

from tgbot.logger import get_logger
from tgbot.keyboards.reply import main_menu, main_menu_admin, admin_menu, schedule_menu, submission_menu, settings_menu
from tgbot.middlewares.localization import i18n

_ = i18n.lazy_gettext

logger = get_logger(__name__)


# region Menu handlers
# üìã –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
async def menu_handler_show_main_menu(message: types.Message, state: FSMContext):
    try:
        await message.answer(message.text, reply_markup=main_menu)
        await state.finish()
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# üìã –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
async def menu_handler_show_main_menu_admins(message: types.Message, state: FSMContext):
    try:
        await message.answer(message.text, reply_markup=main_menu_admin)
        await state.finish()
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# üóì –†–æ–∑–∫–ª–∞–¥
async def menu_handler_show_schedule_menu(message: types.Message):
    try:
        await message.answer(message.text, reply_markup=schedule_menu)
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# üßæ –ó–∞—Ö–∏—Å—Ç —Ä–æ–±—ñ—Ç
async def menu_handler_show_submission_menu(message: types.Message):
    try:
        await message.answer(message.text, reply_markup=submission_menu)
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# ‚òéÔ∏è –ó–≤'—è–∑–æ–∫
async def menu_handler_show_communication_menu(message: types.Message):
    try:
        await message.answer(_('–ë–æ–¥—è –ª–µ–¥–∞—Ä —â–µ –Ω–µ –∑—Ä–æ–±–∏–≤ ü§™'))
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# üóí –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
async def menu_handler_show_information_menu(message: types.Message):
    try:
        await message.answer(_('–ë–æ–¥—è –ª–µ–¥–∞—Ä —â–µ –Ω–µ –∑—Ä–æ–±–∏–≤ ü§™'))
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# üåê –ü–æ—Å–∏–ª–∞–Ω–Ω—è
async def menu_handler_show_links_menu(message: types.Message):
    try:
        await message.answer(_('–ë–æ–¥—è –ª–µ–¥–∞—Ä —â–µ –Ω–µ –∑—Ä–æ–±–∏–≤ ü§™'))
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# ‚öô –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
async def menu_handler_show_settings_menu(message: types.Message):
    try:
        await message.answer(message.text, reply_markup=settings_menu)
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# üëë –ê–¥–º—ñ–Ω–∫–∞
async def menu_handler_show_admin_menu(message: types.Message):
    try:
        await message.answer(message.text, reply_markup=admin_menu)
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))


# üëë –ê–¥–º—ñ–Ω–∫–∞
async def menu_handler_show_admin_menu_non_admin(message: types.Message):
    try:
        await message.answer(_('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤!'))
    except Exception as e:
        logger.exception(e)
        await message.answer(_('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞'))
# endregion


def register_main_menu(dp: Dispatcher):
    dp.register_message_handler(menu_handler_show_main_menu_admins, text=_('üìã –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'), state='*', is_admin=True)
    dp.register_message_handler(menu_handler_show_main_menu, text=_('üìã –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'), state='*', is_logined=True)

    dp.register_message_handler(menu_handler_show_main_menu_admins, text=_('‚Ü© –ù–∞–∑–∞–¥'), is_admin=True)
    dp.register_message_handler(menu_handler_show_main_menu, text=_('‚Ü© –ù–∞–∑–∞–¥'), is_logined=True)

    dp.register_message_handler(menu_handler_show_schedule_menu, text=_('üóì –†–æ–∑–∫–ª–∞–¥'), is_logined=True)
    dp.register_message_handler(menu_handler_show_submission_menu, text=_('üßæ –ó–∞—Ö–∏—Å—Ç —Ä–æ–±—ñ—Ç'), is_logined=True)
    dp.register_message_handler(menu_handler_show_communication_menu, text=_('‚òéÔ∏è –ó–≤\'—è–∑–æ–∫'), is_logined=True)
    dp.register_message_handler(menu_handler_show_information_menu, text=_('üóí –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è'), is_logined=True)
    dp.register_message_handler(menu_handler_show_links_menu, text=_('üåê –ü–æ—Å–∏–ª–∞–Ω–Ω—è'), is_logined=True)
    dp.register_message_handler(menu_handler_show_settings_menu, text=_('‚öô –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è'), is_logined=True)

    dp.register_message_handler(menu_handler_show_admin_menu, text=_('üëë –ê–¥–º—ñ–Ω–∫–∞'), is_admin=True)
    dp.register_message_handler(menu_handler_show_admin_menu_non_admin, text=_('üëë –ê–¥–º—ñ–Ω–∫–∞'))
